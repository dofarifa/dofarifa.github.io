<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>RM学校代码分析</title>
      <link href="/2025/08/13/%E4%BB%A3%E7%A0%81%E5%88%86%E6%9E%90/"/>
      <url>/2025/08/13/%E4%BB%A3%E7%A0%81%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<h3 id="Freertos任务"><a href="#Freertos任务" class="headerlink" title="Freertos任务"></a>Freertos任务</h3><p>总共执行四个任务，三个底盘的任务和一个测试的任务，分别为<strong>chasis_task.cpp</strong>,<strong>my_test_task.cpp</strong>,<strong>communicate_task.cpp</strong>,<strong>detect_task.cpp</strong>。下面分别从每个任务入手分析代码，先从<strong>chasis_task.cpp</strong>入手，在文件<strong>chasis.cpp</strong>种声明了类Chasis的全局实例对象，即<strong>chasis</strong>, 在任务chasis_task中先执行初始化即init():</p><h4 id="chasis-init-函数："><a href="#chasis-init-函数：" class="headerlink" title="chasis::init()函数："></a>chasis::init()函数：</h4><p>先获取遥控器指针，通过代码：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">chassis_RC = remote_control.get_remote_control_point();</span><br><span class="line">last_chassis_RC = remote_control.get_last_remote_control_point();</span><br></pre></td></tr></table></figure><p>然后设置模式，设置初始的模式为<strong>CHASSIS_ZERO_FORCE</strong>，控制模式设置为<strong>CHASSIS_VECTOR_RAW</strong>，即直接输出控制，然后通过for循环初始化四个电机，在<strong>chasis.h</strong>文件中对Motor.cpp文件中的类M3508进行了实例化：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">M3508_motor chassis_motive_motor[4];</span><br></pre></td></tr></table></figure><p>初始化中即传入由函数<strong>get_chassis_motive_motor_measure_point(i)</strong> 获取到都电机数据指针，然后创建一个数组**motive_speed_pid_parm[5]**，存入pid相关数据：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&#123;MOTIVE_MOTOR_SPEED_PID_KP, MOTIVE_MOTOR_SPEED_PID_KI, MOTIVE_MOTOR_SPEED_PID_KD, MOTIVE_MOTOR_SPEED_PID_MAX_IOUT, MOTIVE_MOTOR_SPEED_PID_MAX_OUT&#125;;</span><br></pre></td></tr></table></figure><p>赋值完成后调用pid::init()函数：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">Pid::init</span><span class="params">(pid_mode_e mode_, <span class="type">const</span> fp32 *pid_parm, fp32 *ref_, fp32 *set_, fp32 erro_delta_)</span></span><br><span class="line">&#123;</span><br><span class="line">    mode = mode_;</span><br><span class="line">    data.Kp = pid_parm[<span class="number">0</span>];</span><br><span class="line">    data.Ki = pid_parm[<span class="number">1</span>];</span><br><span class="line">    data.Kd = pid_parm[<span class="number">2</span>];</span><br><span class="line">    data.kf = pid_parm[<span class="number">3</span>];</span><br><span class="line">    data.max_iout = pid_parm[<span class="number">3</span>];</span><br><span class="line">    data.max_out = pid_parm[<span class="number">4</span>];</span><br><span class="line">    data.ref_last = *ref_;</span><br><span class="line">    data.<span class="built_in">set</span> = set_;</span><br><span class="line">    data.ref = ref_;</span><br><span class="line">    data.error = *set_ - *ref_;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (data.mode == PID_ANGLE)</span><br><span class="line">        data.error_delta = erro_delta_;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">chassis_motive_motor[i].speed_pid.init(PID_SPEED, motive_speed_pid_parm, &amp;chassis_motive_motor[i].speed, &amp;chassis_motive_motor[i].speed_set, NULL);</span><br></pre></td></tr></table></figure><p>即开启速度pid，传入数组地址<strong>motive_speed_pid_parm</strong>，电机当前速度，和设定速度。</p><p>使用一阶低通滤波器，即：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">chassis_cmd_slow_set_vx.init(CHASSIS_CONTROL_TIME, chassis_x_order_filter);</span><br><span class="line">chassis_cmd_slow_set_vy.init(CHASSIS_CONTROL_TIME, chassis_y_order_filter);</span><br></pre></td></tr></table></figure><p>原理为<strong>滤波器输出 &#x3D; 系数 × 当前输入指令 + (1 - 系数) × 上一次滤波器输出</strong>，使速度指令缓慢变化。</p><p><strong>pid.clear()的作用</strong>：即通过清除所有内部状态量（尤其是积分项），确保控制器正常工作。</p>]]></content>
      
      
      <categories>
          
          <category> RM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RoboMaster </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>人生经历</title>
      <link href="/2025/04/22/%E4%B8%80%E7%9B%B4%E5%9C%A8%E4%B8%80%E8%B5%B7/"/>
      <url>/2025/04/22/%E4%B8%80%E7%9B%B4%E5%9C%A8%E4%B8%80%E8%B5%B7/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="05616e490ee90032e6b20fb6787fc9ade558f26b94d3a5dd6f4a2d03d1b52ee2">e3f46cb94bc34d3607a47a0dc61ab1e50da8b8f855d5588ce78d46afef31c3b962d5ef7e4df43eda0627c6ecd00859135295e8419f0571a0af7ad56ea42dcb75de8662985e8008318f3d37a30c8d5613751da70653785a87ea4df615c8e377c8a81778c3ff918ad6d8c875fe1e3456b2c7252636f4c52358b9fb5904ca5954eb177bb24b2a780a05abb3c85e34f1c7ef97123bceec41b36a207e1febd1299f80b9a8088195bc743922545851797c97be3244e40de4cd050535077dc1b4a1e333805a3368522f77cd1ee7748c83f5299e3030ca6ec078e86f4ffbe5436fc2dff416206426c8b858fa546b51a4d1f60c87609014a328ef3bc08479c2b2645c66aede0f957dce26f77714cb7c52c799cfcb56575bcef564147975920da1ffd81af3b27f76da5f2b8a0af2b6b9ae2511243e50c3193a118fdfec4fa75fd1ab98b1fabba9724b70c5039c67c8e181648d1b9041f84bc7863628e31b395aedabfcbe7fcad7adc2697af5d72c62d08f951f50c60d343dcb28f8d491347500ef194b4b2168f7b4affb3aee05f3bb48a492814d601f1b60405a14e46d0f07dde678a55482e51c8ac970e8a0d16f6bc32d1ebf2662ecc539cf43bcd26d4a54e226b19c81296beed1b5e2d37bacfbcebed392fad1fa29344ae31f2add97f137bc7fd6bf77951c254ec26938aaff7a8954a15f012728dc388aecbcca9fcf8c61376d1dfe645184013518735e7b77acd4c47845cc4e822464fb32c5a8d1620b5ac309d4cfa0a4b65cd7deaef33d1ac6a39376508a8ca25be51ce1969f8d54a680c6b2f76f35871d46c618284960535df0bd79a54618fce2cd798490f04e0ff3a63fc5859ce7461a15306d16dbedb0c740ff987d61498fcd0ace2a1f7c475326fd502e5f8638ed530d5b9815096ee3769a76c524a430c7c0391d8a97483a472133c3408796c1a0084b6b6a55de17744c36681d2ba86c28a78c1af8c12ca717e1e4515592f3f3870305e711cf727b88602059cf32d60c6620dd2789fb328f079f0e419df0b1a226a67d67c48ed9b35f99e8b1fe62caa9a3f07b1cda6b2cb62c7444fdeb980f70c9dd0972426a1cb83fee0e414238969bb49f7cf0f0f4abfe3f38639d9e41985a08ed204b6fae97a91cc0d86663bfd0ca97ea056f41baeb068dc735f5c858c52e8c2110371d4d407c3ac10d9bff57376f20bf90e1d831caa9daf7adaf6b2f62d238</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">我的名字缩写+生日</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
